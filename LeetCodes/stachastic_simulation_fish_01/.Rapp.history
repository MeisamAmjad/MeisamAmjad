c(1, 5000, 500)
c(1, 500, 5000, )
c(1, 500, 5000)
c(1, 5000)
seq(1, 5000, 500)
seq(1, 5500, 500)
source("readNoFishing.R")
?sd
sd(MyData[1])
?data.frame
data.frame(MyData[1])
data.frame(r1 = names(MyData[1]), MyData[1])
sd(1:100)
?stack
stack(Mydata[1])
stack(MyData[1])
MyData[1,]
MyData[1]
sd(MyData[1])
?vector
source("readNoFishing.R")
?double
vector(0.0, length = length)
?vector
a = 3.5
typeof(a)
source("readNoFishing.R")
vector(mode = "double", length = length)
?average
?avg
vector(length = length, mode = "double")
source("readNoFishing.R")
10 / 5
10 / 6
source("readNoFishing.R")
avg.pop
sd(avg.pop)
dec(avg.pop)
dev(avg.pop)
?de
?dev
source("readNoFishing.R")
sd(avg.pop)
source("readNoFishing.R")
sd(avg.pop)
MyData
avg.pop
MyData[1]
avg.pop[1]
sum(MyData[1])
length
length(MyData)
sum(MyData[1])
source("readNoFishing.R")
length(MyData[1])
length(MyData[1,])
length(MyData[,1])
source("readNoFishing.R")
MyData[1,]
MyData[1]
MyData[2]
MyData[4]
length(MyData[5])
?size
sizeof
?sizeof
??sizeof
?ls.size
length(MyData[ , 1])
source("readNoFishing.R")
?paste
source("readNoFishing.R")
MyData[400]
MyData[399]
length(MyData)
MyData[1]
MyData[99]
MyData[100]
MyData[101]
source("readNoFishing.R")
max(avg.pop)
MyData[1]
sum(MyData[1])
source("readNoFishing.R")
avg.pop[1]
MyData[1]
max(MyData[1])
min(MyData[1])
sd(MyData[1])
sd(avg.pop)
c = vector(length = 400)
c = MyData[1]
c
sum(c)
sd(c)
c = MyData[2]
c
length(MyData[,1])
MyData[1]
?read.csv
source("readNoFishing.R")
MyData[1]
length(MyData[,1])
length(MyData)
length(MyData[1])
length(MyData[1,])
source("readNoFishing.R")
vector(c(1:3), c(1,4))
?vector
data.inrow = data.frame(x = 1:trial, y = 1:years)
data.frame(x = 1:3, y = 5:7)
?data.frame
?matrix
matrix(nrow = trial, ncol = 100)
source("readNoFishing.R")
data
data[1]
length(newData)
length(newData[1])
length(newData[1,])
length(newData[,1])
source("readNoFishing.R")
newData[1,]
sd(newData[1, ])
newData[1]
newData[1,]
data[1]
source("readNoFishing.R")
sd.pop
se.pop
source("readNoFishing.R")
se.pop
sd.pop
se.pop
source("readNoFishing.R")
sd.pop
se.pop
sqrt(trial)
source("readNoFishing.R")
sqrtN
sd.pop
se.pop
source("readNoFishing.R")
sd.pop
se.pop
source("readNoFishing.R")
se.pop
se.pop + 1
?points
source("readNoFishing.R")
length(se.pop)
years
length(avg.pop)
avg.pop + se.pop
avg.pop
se.pop
se.pop[1] + avg.pop[1]
source("readNoFishing.R")
length(years)
source("readNoFishing.R")
?points
source("readNoFishing.R")
?plot
?xlim
source("readNoFishing.R")
?xlim
source("readNoFishing.R")
?points
?lines
source("readNoFishing.R")
seq(1, 100)
c(1:100)
1:100
source("readNoFishing.R")
c(1, 100)
source("readNoFishing.R")
?points
source("readNoFishing.R")
?points
source("readNoFishing.R")
?lines
c(2, 8)
source("readNoFishing.R")
for (i in 1:years) {#
	lines(c(i, avg.pop[i] - se.pop[i]), c(i, avg.pop[i] + se.pop[i]), col = "brown")#
}
lines(c(100, avg.pop[100] - se.pop[100]), c(100, avg.pop[100] + se.pop[100]), col = "brown")
source("readNoFishing.R")
c(100, avg.pop[100] - se.pop[100])
c(100, avg.pop[100] + se.pop[100])
lines(c(1,100), c(1, 5000), col = "red")
lines(c(100, 1), c(5000, 1), col = "red")
source("readNoFishing.R")
lines(c(100, 1), c(5000, 1), col = "red")
lines(c(1, 1), c(1000, 5000), col = "red")
c(years, years)
c(1:years, 1:years)
lines(c(1:years, 1:years), c(avg.pop - se.pop, avg.pop + se.pop), col = "red")
source("readNoFishing.R")
?points
source("readNoFishing.R")
points(c(1, 1), c(1000, 3000))
source("readNoFishing.R")
source("readNoFishing.R")
?drawPlot
?drawPlot
?drawPlot
?drawPlot
source("readNoFishing.R")
source("readNoFishing.R")
se.pop
exp(log(1.0 + 0.1) / 365) - 1.0
aa = exp(log(1.0 + 0.1) / 365) - 1.0
aa * 365
aa = exp(log(1.0 + 0.1) / 30) - 1.0
aa
aa * 30
aa = exp(log(1.0 + 0.1) / (120 - 91 + 1)) - 1.0
aa * 30
aa = exp(log(1.0 + 0.2) / (120 - 91 + 1)) - 1.0
aa * 30
aa = exp(log(1.0 + 0.2) / (120 - 91)) - 1.0
aa * 30
120 -91
aa = exp(log(1.0 + 0.2) / (0)) - 1.0
aa
aa * 30
aa = exp(log(1.0 + 0) / (365)) - 1.0
aa
aa = exp(log(1.0 + .2) / (61 - 30 + 1)) - 1.0
aa *30
aa
aa = exp(log(1.0 + .2) / (61 - 30)) - 1.0
aa = exp(log(1.0 + .08) / (60 - 31)) - 1.0
aa*30
aa = exp(log(1.0 + .08) / (60 - 31 + 1)) - 1.0
aa*30
source("readNoFishing.R")
